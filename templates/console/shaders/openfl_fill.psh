#include "common.fxh"
#include "openfl.fxh"


float4 g_scissorRect : register (c0);
#define g_scissorMin (g_scissorRect.xy)
#define g_scissorMax (g_scissorRect.zw)

float4 g_colorMultiplier : register (c1);
float4 g_colorOffset     : register (c2);


struct PS_IN {

	PS_IN_POSITION
	float4 Color : COLOR;

};


float4 main( PS_IN In ) : PS_TARGET_OUT {

#ifdef USE_SCISSOR_TEST
	{
		float2 s0 = step(g_scissorMin, In.Position.xy);
		float2 s1 = step(In.Position.xy, g_scissorMax);
		In.Color.a *= s0.x*s0.y * s1.x*s1.y;
	}
#endif

#ifdef USE_COLOR_TRANSFORM
	return colorTransform(
		float4(1.0, 1.0, 1.0, 1.0),
		In.Color,
		g_colorMultiplier,
		g_colorOffset
	);
#else
	return In.Color;
#endif

}
