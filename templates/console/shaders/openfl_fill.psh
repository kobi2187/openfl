#include "common.fxh"
#include "openfl.fxh"


float4 g_scissorRect : register (c0);
#define g_scissorMin (g_scissorRect.xy)
#define g_scissorMax (g_scissorRect.zw)


struct PS_IN {

	PS_IN_POSITION
	float4 ColorMul : COLOR;
	float4 ColorAdd : COLOR1;

};


float4 main( PS_IN In ) : PS_TARGET_OUT {

	float4 OutColor;

#ifdef USE_COLOR_TRANSFORM
	OutColor = colorTransform(
		float4(1.0, 1.0, 1.0, 1.0),
		In.ColorMul,
		In.ColorAdd
	);
#else
	OutColor = In.ColorMul;
#endif

#ifdef USE_SCISSOR_TEST
	{
		float2 s0 = step(g_scissorMin, In.Position.xy);
		float2 s1 = step(In.Position.xy, g_scissorMax);
		OutColor.a *= s0.x*s0.y * s1.x*s1.y;
	}
#endif

	return OutColor;

}
